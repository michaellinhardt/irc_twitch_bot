[script]
n0=alias angle2rad return $calc($1 /180 * $pi)
n1=alias e return 2.718281828459
n2=alias cosh {
n3=  return $calc(($e ^ $iif($prop == deg, $angle2rad($1) , $1 ) + $e ^ (-1* $iif($prop == deg, $angle2rad($1) , $1 ))) /2)
n4=}
n5=
n6=alias paraXPPermin {
n7=  set %xppermin.total $int($nick(%twitch.chan,0)) * $int(%xppermin.perviewer)
n8=  if ($int(%xppermin.total)<25) { set %xppermin.total 25 }
n9=  direXPPermin
n10=}
n11=
n12=alias incViewerXPPermin {
n13=  var %target = $1
n14=  var %xpgain = $calc($int(%xppermin.total) + $int($calcXPBonus(%target,%xppermin.total)))
n15=  set %profile.xpcurrent. [ $+ [ %target ] ] $int(%profile.xpcurrent. [ $+ [ %target ] ]) + $int(%xpgain)
n16=}
n17=
n18=alias calcXPBonus {
n19=  var %target = $1
n20=  var %xpgain = $int($2)
n21=  var %bonus = 0
n22=  debug bonus: %bonus
n23=
n24=  if (%profile.follower. [ $+ [ %target ] ] == 1) { var %bonus = $calc($int(%bonus) + $calc($int(%xpgain)*0.5)) }
n25=  debug follower: %bonus
n26=
n27=  if (%profile.win.pve. [ $+ [ %target ] ] > 0) { 
n28=    var %percent = %profile.win.pve. [ $+ [ %target ] ]
n29=    var %bonus = $calc($int(%bonus) + $calc($int(%xpgain)*%percent))
n30=  }
n31=  debug winpve: %bonus
n32=
n33=  if (%profile.win.quizz. [ $+ [ %target ] ] > 0) {
n34=    var %percent = %profile.win.quizz. [ $+ [ %target ] ]
n35=    var %bonus = $calc($int(%bonus) + $calc($int(%xpgain)*%percent))
n36=  }
n37=  debug winquizz: %bonus
n38=
n39=  return %bonus
n40=}
n41=
n42=alias incViewerXP {
n43=  var %target = $1
n44=  var %xpgain = $calc($int($2) + $int($calcXPBonus(%target,$2)))
n45=
n46=  set %profile.xpcurrent. [ $+ [ %target ] ] $calc($int(%profile.xpcurrent. [ $+ [ %target ] ]) + $int(%xpgain))
n47=}
n48=
n49=alias setLevel {
n50=  ; VERIFIE LES LEVEL UP
n51=  var %target = $1
n52=  var %levelup = 0
n53=  while ($true) {
n54=    ; INCREMENTE LE LEVEL TANT QUE XPCURRENT >= XPREQ
n55=    var %xpreq = $paraXPReq($int(%profile.level. [ $+ [ %target ] ]))
n56=    ; STOP LA BOUCLE SI XPCURRENT < XPREQ
n57=    if (%profile.xpcurrent. [ $+ [ %target ] ] < %xpreq) { break }
n58=
n59=    set %profile.xpcurrent. [ $+ [ %target ] ] $int(%profile.xpcurrent. [ $+ [ %target ] ]) - $int(%xpreq)
n60=    set %profile.level. [ $+ [ %target ] ] $int(%profile.level. [ $+ [ %target ] ]) + 1
n61=    var %levelup = 1
n62=  }
n63=  ; if (%levelup == 1) { direLevelUP %target }
n64=}
n65=
n66=alias paraXPReq {
n67=  var %n = $int($1)
n68=  var %k = $int(100)
n69=  var %a = $int(600)
n70=  var %b = $int(100)
n71=  var %c = $int(1)
n72=
n73=  var %step1 = $calc( $log( $cosh( ( %n - %a ) / %b ) ) )
n74=  var %step2 = $calc( $log( $cosh( -%a / %b ) ) )
n75=  var %step3 = $calc( %n / %c )
n76=  var %step4 = $calc( %step1 - %step2 + %step3 )
n77=  var %xpreq = $calc( %k * %step4 )
n78=
n79=  return $int(%xpreq)
n80=}
n81=
n82=alias itest {
n83=
n84=  ; k* ( ln(cosh( (n-a)/b)) - ln(cosh( -a/b )) + n/c )
n85=  var %k = $int(100)
n86=  var %a = $int(600)
n87=  var %b = $int(100)
n88=  var %c = $int(1)
n89=  ; k* ( ln(cosh( (n-a)/b)) - ln(cosh( -a/b )) + n/c )
n90=  ; ln(cosh( (n-a)/b))
n91=  ; -
n92=  ; ln(cosh( -a/b ))
n93=  ; + n/c
n94=
n95=  clear %twitch.chan
n96=  set %n $int(0)
n97=  set %xptotal 0
n98=  while ($true) {
n99=    inc %n
n100=    if (%n > 1000) { break }
n101=
n102=    var %step1 = $calc( $log( $cosh( ( %n - %a ) / %b ) ) )
n103=    var %step2 = $calc( $log( $cosh( -%a / %b ) ) )
n104=    var %step3 = $calc( %n / %c )
n105=    var %step4 = $calc( %step1 - %step2 + %step3 )
n106=    var %xpreq = $calc( %k * %step4 )
n107=
n108=    if (%last == $null) { set %last $int(%xpreq) }
n109=    var %dif = $calc( %xpreq - %last )
n110=    set %last %xpreq
n111=    set %xptotal %xptotal + %xpreq
n112=
n113=    echo %twitch.chan %n = $round(%xpreq, 0) ( %dif ) $round(%xptotal,0)
n114=  }
n115=  unset %last
n116=  unset %xptotal
n117=  unset %n
n118=}
